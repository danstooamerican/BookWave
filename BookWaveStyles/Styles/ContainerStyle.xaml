<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Commons.Styles.Converter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <converters:DescriptionTextHeightConverter x:Key="DescriptionTextHeightConverter" />
        </ResourceDictionary>
        <ResourceDictionary Source="/Commons.Styles;component/Colors/colors.xaml"/>
        <ResourceDictionary Source="/Commons.Styles;component/Styles/BorderStyle.xaml"/>

    </ResourceDictionary.MergedDictionaries>

    <!-- DataGrid -->    
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextHighlightColorBrush}" />
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                        BorderThickness="0">

                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Highlight a grid row as the mouse passes over -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource GridBackgroundSelectedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource GridBackgroundHoverBrush}" />
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGrid" TargetType="DataGrid">       
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource TextPressedColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridBackgroundSelectedBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="MinWidth" Value="25" />
                    <Setter Property="MinHeight" Value="28" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    
                                    <Border x:Name="BackgroundBorder"
                                        Background="{StaticResource GridBackgroundBrush}"
                                        Grid.ColumnSpan="2" />       
                                    
                                    <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                                    
                                    <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                                        Grid.Column="1" Width="8" Height="6" Fill="{StaticResource AccentColorBrush}" Margin="0,0,8,0" 
                                        VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                                    
                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
                                        Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                    
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
                                        Style="{StaticResource ColumnHeaderGripperStyle}"/>

                                    <Rectangle Grid.Row="1" Height="1" HorizontalAlignment="Stretch" Stroke="{StaticResource TextPressedColorBrush}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" 
                                            TargetName="PART_LeftHeaderGripper"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle" Value="{StaticResource DataGridRow}"/>
        
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">

                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4, 9" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                    Background="{TemplateBinding Background}">
                                    
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander -->

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="19"
                                    Height="19" Fill="{DynamicResource ButtonNormalBackgroundFill}" Stroke="DarkGray" />
                            <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                    VerticalAlignment="Center" Width="17" Height="17"
                                    Fill="{DynamicResource ExpanderShadowFill}" />
                            <Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow"
                                    VerticalAlignment="Center" Stroke="#666" StrokeThickness="2"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5" />
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,0,0,0"
                                    VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Visibility" TargetName="shadow" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center"
                                        Width="19" Height="19" Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                        Stroke="DarkGray" />
                                <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                        VerticalAlignment="Center" Width="17" Height="17"
                                        Fill="{DynamicResource ExpanderShadowFill}" />
                                <Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow"
                                        VerticalAlignment="Center" Stroke="#666" StrokeThickness="2"
                                        Data="M 1,1.5  L 4.5,5  L 8,1.5" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,4,0,0"
                                    VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Visibility" TargetName="shadow" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center"
                                        Width="19" Height="19" Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                        Stroke="DarkGray" />
                                <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                        VerticalAlignment="Center" Width="17" Height="17"
                                        Fill="{DynamicResource ExpanderShadowFill}" />
                                <Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow"
                                        VerticalAlignment="Center" Stroke="#666" StrokeThickness="2"
                                        Data="M 1,1.5  L 4.5,5  L 8,1.5" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,0,0,0"
                                    VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Visibility" TargetName="shadow" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center"
                                        Width="19" Height="19" Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                        Stroke="DarkGray" />
                                <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                        VerticalAlignment="Center" Width="17" Height="17"
                                        Fill="{DynamicResource ExpanderShadowFill}" />
                                <Path SnapsToDevicePixels="false" HorizontalAlignment="Center" x:Name="arrow"
                                        VerticalAlignment="Center" Stroke="#666" StrokeThickness="2"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,4,0,0"
                                    VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource TextHighlightColorBrush}" />
                            <Setter Property="Visibility" TargetName="shadow" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimatedExpander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Grid.Column="0" Text="{Binding}" 
                            Margin="0, 0, 10, 0"
                            FontSize="12" FontWeight="SemiBold"
                            Foreground="{StaticResource TextColorBrush}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Storyboard x:Key="scaleYUp">
                                <DoubleAnimation From="0" To="1" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite"
									Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleYDown">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite"
									Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleXUp">
                                <DoubleAnimation From="0" To="1" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite"
									Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" />
                            </Storyboard>
                            <Storyboard x:Key="scaleXDown">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite"
									Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" />
                            </Storyboard>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>

                    <Border BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="auto"/>
                                <ColumnDefinition  Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            
                            <ToggleButton Grid.Column="0" Grid.Row="0"
                                HorizontalAlignment="Stretch"
								IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite"
								Style="{StaticResource ExpanderDownHeaderStyle}">
                                <ContentPresenter Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
									ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Margin="1"
									Focusable="false" />
                            </ToggleButton>

                            <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource HorizontalSeparator}"
                                BorderBrush="{StaticResource TextPressedColorBrush}"/>

                            <ContentPresenter x:Name="ExpandSite" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}" Focusable="false">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Down" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleYDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXUp}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource scaleXDown}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top" />

                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite"
								Value="{DynamicResource ExpanderUpHeaderStyle}" />

                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite"
								Value="{DynamicResource ExpanderRightHeaderStyle}" />

                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite"
								Value="{DynamicResource ExpanderLeftHeaderStyle}" />

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Library Item -->
    <Style x:Key="LibraryItemStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border MinHeight="350" MinWidth="250" MaxHeight="350" MaxWidth="250" Margin="6, 6"
                        Padding="10, 6" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="250" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Image Grid.Column="0" Grid.Row="0" MaxWidth="250" MaxHeight="250"
                                VerticalAlignment="Top" HorizontalAlignment="Center"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Source="{Binding Metadata.CoverPath}"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Metadata.Title}" 
                                x:Name="lblTitle"
                                Foreground="{StaticResource TextHighlightColorBrush}" 
                                VerticalAlignment="Top" HorizontalAlignment="Left"
                                TextTrimming="WordEllipsis" 
                                FontSize="20" FontWeight="SemiBold" TextWrapping="Wrap" />

                            <TextBlock Grid.Column="0" Grid.Row="2" Text="{Binding Metadata.Description}" 
                                Foreground="{StaticResource TextColorBrush}" 
                                VerticalAlignment="Top" HorizontalAlignment="Left"
                                FontSize="16" TextWrapping="Wrap" TextTrimming="WordEllipsis" 
                                MaxHeight="{Binding ActualHeight, ElementName=lblTitle, 
                                    Converter={StaticResource DescriptionTextHeightConverter}}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource GridBackgroundColor}" To="{StaticResource GridBackgroundHoverColor}" 
                                            Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource GridBackgroundHoverColor}" To="{StaticResource GridBackgroundColor}"  
                                            Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>